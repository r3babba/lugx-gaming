apiVersion: v1
kind: ConfigMap
metadata:
  name: game-init-script
data:
  init.sql: |
    CREATE TABLE IF NOT EXISTS games (
      id SERIAL PRIMARY KEY,
      name TEXT NOT NULL,
      category TEXT NOT NULL,
      release_date DATE NOT NULL,
      price NUMERIC NOT NULL
    );
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-game
spec:
  selector:
    app: postgres-game
  ports:
    - port: 5432
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-game
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-game
  template:
    metadata:
      labels:
        app: postgres-game
    spec:
      containers:
        - name: postgres-game
          image: postgres:15
          env:
            - name: POSTGRES_DB
              value: games
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: initdb
              mountPath: /docker-entrypoint-initdb.d
            - name: postgres-persistent-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: initdb
          configMap:
            name: game-init-script
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: postgres-game-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-game-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: game-service
spec:
  selector:
    app: game-service
  type: LoadBalancer
  ports:
    - port: 5000
      targetPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: game-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: game-service
  template:
    metadata:
      labels:
        app: game-service
    spec:
      containers:
        - name: game-service
          image: YOUR_ECR_REPO/game-service:latest
          imagePullPolicy: Always 
          ports:
            - containerPort: 5000
          env:
            - name: DB_HOST
              value: postgres-game
