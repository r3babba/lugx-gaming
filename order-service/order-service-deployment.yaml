apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-order-initdb
data:
  init.sql: |
    CREATE TABLE IF NOT EXISTS orders (
        id SERIAL PRIMARY KEY,
        customer_name VARCHAR(100),
        cart_items TEXT,
        total_price NUMERIC(10, 2)
    );
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-order
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-order
  template:
    metadata:
      labels:
        app: postgres-order
    spec:
      containers:
      - name: postgres
        image: postgres:15
        env:
        - name: POSTGRES_DB
          value: ordersdb
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: password
        volumeMounts:
        - name: initdb
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: initdb
        configMap:
          name: postgres-order-initdb
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-order
spec:
  ports:
  - port: 5432
  selector:
    app: postgres-order
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
      - name: order-service
        image: order-service
        ports:
        - containerPort: 5000
        env:
        - name: DB_HOST
          value: postgres-order
        - name: DB_NAME
          value: ordersdb
        - name: DB_USER
          value: postgres
        - name: DB_PASSWORD
          value: password
        imagePullPolicy: IfNotPresent
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
spec:
  type: NodePort
  ports:
  - port: 5000
    nodePort: 30002
  selector:
    app: order-service
